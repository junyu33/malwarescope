import sys, os, re
file = open('ttp_from_stacktrace_per_line_new.txt', 'r')
cnt = 0
valid = 0
tot = 0
tot_multi = 0
valid_multi = 0
tot_single = 0
valid_single = 0

lines = file.readlines()

filelist = os.listdir('output_folder')

def is_name_in_list(name):
    for file in filelist:
        if name in file:
            return True
    return False

def size(file):
    return os.path.getsize('output_folder/' + file)

for line in lines:
    pattern = r'\{.*?\}'
    match = re.search(pattern, line)
    if match is None:
        continue

    ttps = eval(match[0])

    pattern = r"\b(\S+\.txt)\b"
    match = re.search(pattern, line)
    if match is None:
        continue

    name = match[0][:-4]

    if not is_name_in_list(name):
        continue


    if len(ttps) == 1:
        outfile = name + '.patch.out' 
        comparefile = name + '.patch1.out'
        output_source = name + '.patch.txt'
        compare_source = name + '.patch1.txt'
        if not is_name_in_list(outfile) or not is_name_in_list(comparefile):
            continue
        if size(output_source) == 0 and size(compare_source) == 0:
            continue

        tot += 1
        tot_single += 1
        if size(outfile) != size(comparefile):
            print(name)
            valid += 1
            valid_single += 1
    
    else:
        for ttp in ttps:
            outfile = name + '.patched-' + ttp + '.out'
            comparefile = name + '.patched1-' + ttp + '.out'
            output_source = name + '.patched-' + ttp + '.txt'
            compare_source = name + '.patched1-' + ttp + '.txt'
            if not is_name_in_list(outfile) or not is_name_in_list(comparefile):
                continue
            if size(output_source) == 0 and size(compare_source) == 0:
                continue

            tot_multi += 1
            tot += 1
            if size(outfile) != size(comparefile):
                print(name, ttp)
                valid += 1
                valid_multi += 1

#for file in files:
#    cnt += 1
#    if (cnt % 4 != 1):
#        continue
#
#    index_dot = file.rfind(".", 0, len(file) - 4)  
#    program_name = file[:index_dot] # .patch.out
#    if os.path.getsize('output_folder/' + program_name + '.patch.txt') == 0 \
#            and os.path.getsize('output_folder/' + program_name + '.patch1.txt') == 0:
#        continue
#
#    tot += 1
#    if (os.path.getsize('output_folder/' + program_name + '.patch.out') != \
#            os.path.getsize('output_folder/' + program_name + '.patch1.out')):
#        print(program_name)
#        valid += 1

print('tot:', valid, tot, valid / tot)
print('single:', valid_single, tot_single, valid_single / tot_single)
print('multiple:', valid_multi, tot_multi, valid_multi / tot_multi)
