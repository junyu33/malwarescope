# Your input text, from 2024/files_with_ttp_api/map.txt
input_text = """
ttp = ["T1063"]
filter_apinames = ["LdrLoadDll", "LdrGetDllHandle"]
additional = ["snxhk"]
ttp = ["T1063"]
filter_apinames = ["LdrLoadDll", "LdrGetDllHandle"]
additional = ["avcuf32"]
ttp = ["T1031", "T1089"]
filter_apinames = ["OpenService", "ControlService"]
additional = []    
ttp = ["T1057"]
filter_apinames = ["LdrGetProcedureAddress"]
additional = ["HKEY_CURRENT_USER\\Software\\Wine"]
ttp = ["T1115"]	
filter_apinames = ["GetClipboardData"]
additional = []
ttp = ["T1082"]
filter_apinames = ["NtQuerySystemInformation"]
additional = ["SystemProcessorPerformanceInformation"]
ttp = ["T1089"]
filter_apinames = ["__anomaly__"]
additional = []
ttp = ["T1007"]
filter_apinames = ["EnumServicesStatus"]
additional = ["SYSTEM\\ControlSet001\\Services"]
ttp = ["T1082"]
filter_apinames = ["GlobalMemoryStatus", "GetPhysicallyInstalledSystemMemory"]
additional = []
ttp = ["T1082"]
filter_apinames = ["NtCreateFile"]
additional = ["\\hgfs", "\\vmci"]
ttp = ["T1067"]
filter_apinames = ["ShellExecute", "CreateProcessInternal"]
additional = ["bcdedit"]
ttp = ["T1067"]
filter_apinames = ["NtCreateFile", "NtDuplicateObject", "NtOpenFile", "NtClose", "NtSetInformationFile", "NtWriteFile", "DeviceIoControl", "NtDeviceIoControlFile"]
additional = ["\\physicaldrive0", "NtDeviceIoControlFile", "IOCTL_SCSI_PASS_THROUGH_DIRECT"]
ttp = ["T1158"]
filter_apinames = ["NtCreateFile"]
additional = ["SetFileAttributes"]
ttp = ["T1054", "T1112"]
filter_apinames = ["NtSetValueKey", "NtCreateKey", "RegCreateKeyExA", "RegCreateKeyExW", "RegSetValueExA", "RegSetValueExW"]
additional = []
ttp = ["T1031"]
filter_apinames = ["CreateServiceA", "CreateServiceW", "StartServiceA", "StartServiceW"]
additional = []
ttp = ["T1129"]
filter_apinames = ["CreateProcessInternalW", "ShellExecuteExW"]
additional = []
ttp = ["T1089"]
filter_apinames = ["NtWriteFile", "RegSetValueExA", "RegSetValueExW", "NtSetValueKey"]
additional = ["firefox", "chrome"]
ttp = ["T1115"]
filter_apinames = ["AddClipboardFormatListener", "SetClipboardViewer"]
additional = []
ttp = ["T1055"]
filter_apinames = ["Process32NextW", "FindWindowW", "SendNotifyMessageA"]
additional = ["SendNotifyMessage", "explorer.exe", "Shell_TrayWnd"]
ttp = ["T1071"]
filter_apinames = ["InternetConnectA", "InternetConnectW", "InternetCrackUrlA", "InternetCrackUrlW", "InternetCrackUrlA", "InternetCrackUrlW", "URLDownloadToFileA","URLDownloadToFileW", "URLDownloadToCacheFileA", "URLDownloadToCacheFileW", "HttpOpenRequestA","HttpOpenRequestW", "WSASend", "send", "sendto", "connect"]
additional = ["127.", "10.", "172.16.", "192.168."]
ttp = ["T1055"]
filter_apinames = ["CreateRemoteThread", "CreateRemoteThreadEx"]
additional = []
ttp = ["T1040"]
filter_apinames = ["RegSetValueExA", "RegSetValueExW", "NtSetValueKey"]
additional = ["\\software\\microsoft\\windows\\currentversion\\internet settings\\wpad\\", "\\software\\microsoft\\windows\\currentversion\\internet settings\\proxyoverride", "\\software\\microsoft\\windows\\currentversion\\internet settings\\autoconfigurl", "\\software\\microsoft\\windows\\currentversion\\internet settings\\proxyenable"]
ttp = ["T1070", "T1096"]
filter_apinames = ["NtCreateFile", "NtWriteFile"]
additional = ["zone"]
ttp = ["T1071"]
filter_apinames = ["InternetOpenA", "InternetOpenW"]
additional = []
ttp = ["T1188"]
filter_apinames = ["CreateServiceA", "CreateServiceW"]
additional = ["\\\\tor\\\\"]
ttp = ["T1203"]
filter_apinames = ["CreateProcessInternalW"]
additional = ["powerpnt.exe"]
ttp = ["T1203"]
filter_apinames = ["vbe6_CreateObject", "vbe6_GetObject", "vbe6_Invoke"]
additional = []
ttp = ["T1071"]
filter_apinames = ["InternetCrackUrlW", "InternetCrackUrlA", "URLDownloadToFileW", "URLDownloadToCacheFileW", "HttpOpenRequestW", "WSASend", "send"]
additional = ["wordview.exe", "winword.exe", "excel.exe", "powerpnt.exe", "outlook.exe", "acrord32.exe", "acrord64.exe", "wscript.exe", "mspub.exe", "powershell.exe"]
ttp = ["T1129"]
filter_apinames = ["NtWriteFile", "CreateProcessInternalW", "ShellExecuteExW", "NtCreateFile", "NtWriteFile", "CreateProcessInternalW", "ShellExecuteExW", "recv", "InternetReadFile"]
additional = ["wordview.exe", "winword.exe", "excel.exe", "powerpnt.exe", "outlook.exe", "wscript.exe", "java.exe", "javaw.exe", "powershell.exe"]
ttp = ["T1129"]
filter_apinames = ["recv", "InternetReadFile"]
additional = ["wordview.exe", "winword.exe", "excel.exe", "powerpnt.exe", "outlook.exe", "acrord32.exe", "acrord64.exe", "wscript.exe", "java.exe", "javaw.exe", "powershell.exe"]
ttp = ["T1060", "T1053"]
filter_apinames = ["RegSetValueExA", "RegSetValueExW", "NtSetValueKey", "CreateServiceA", "CreateServiceW"]
additional = ["Microsoft\\\\Windows\\\\CurrentVersion\\\\Run"]
ttp = ["T1060"]
filter_apinames = ["RegSetValueExA", "RegSetValueExW", "NtSetValueKey"]
additional = ["SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session\\ Manager", "SYSTEM\\\\ControlSet001\\\\Control\\\\Session\\ Manager"]
ttp = ["T1112"]
filter_apinames = ["RegSetValueExA", "RegSetValueExW", "NtSetValueKey"]
additional = []
ttp = ["T1057"]
filter_apinames = ["Process32Next", "Process32First"]
additional = []
ttp = ["T1057"]
filter_apinames = ["Process32Next", "NtOpenProcess"]
additional = []
ttp = ["T1071"]
filter_apinames = ["ObtainUserAgentString", "InternetOpenA", "InternetOpenW"]
additional = []
ttp = ["T1012", "T1082"]
filter_apinames = ["RegQueryValueExA", "RegQueryValueExW"]
additional = ["\\microsoft\\windows\\currentversion\\uninstall"]
ttp = ["T1012"]
filter_apinames = ["RegOpenKeyExA", "RegOpenKeyExW"]
additional = ["\\microsoft\\windows\\currentversion\\uninstall"]
ttp = ["T1036"]
filter_apinames = ["CreateProcessInternalW", "ShellExecuteExW"]
additional = ["csrss.exe", "explorer.exe", "lsass.exe", "spoolsv.exe", "services.exe", "svchost.exe", "taskmgr.exe", "winlogin.exe"]
ttp = ["T1047"]
filter_apinames = ["IWbemServices_ExecMethod", "IWbemServices_ExecMethodAsync"]
additional = []
"""

# Splitting the input text into lines for processing
lines = input_text.strip().split('\n')

# Initializing a dictionary to hold the mapping
ttp_to_apinames = {}
ttp_to_additional = {}

# Variables to hold the current ttp and filter_apinames being processed
current_ttp = None

# Iterating through each line in the input text
for line in lines:
    # Checking if the line contains a ttp assignment
    if line.startswith("ttp ="):
        # Extracting the ttp code from the line
        current_ttp = line.split('["')[1].split('"]')[0]
    # Checking if the line contains a filter_apinames assignment
    elif line.startswith("filter_apinames ="):
        # Extracting the filter_apinames from the line
        apinames = line.split('["')[1].split('"]')[0].split('", "')
        # Adding or updating the mapping in the dictionary
        if current_ttp in ttp_to_apinames:
            ttp_to_apinames[current_ttp].extend(apinames)
        else:
            ttp_to_apinames[current_ttp] = apinames

    elif line.startswith("additional ="):
        # Extracting the additional from the line
        try:
            additional = line.split('["')[1].split('"]')[0].split('", "')
        except:
            continue
        # Adding or updating the mapping in the dictionary
        if current_ttp in ttp_to_additional:
            ttp_to_additional[current_ttp].extend(additional)
        else:
            ttp_to_additional[current_ttp] = additional

# Printing the resulting dictionary
out1 = open("mapping", "w")
out2 = open("mapping_additional", "w")
print(ttp_to_apinames, file=out1)
print(ttp_to_additional, file=out2)
