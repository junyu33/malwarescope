import re
import matplotlib
from collections import Counter
import matplotlib.pyplot as plt
sample = open('ttp_one_file_per_line_new.txt', 'r')
lab = open('ttp_from_stacktrace_per_line_new.txt', 'r')

tot_cnt = 0
tot_correct = 0
tot_sample = []

for i in range(1, 990):
    print(str(i) + ': ', end='')
    sample_text = sample.readline()
    lab_text = lab.readline()
    
    if sample_text == None:
        continue
    try:
        sample_line = eval(sample_text)
    except:
        print()
        continue

    if lab_text == None:
        continue
        
    match = re.search(r'\{([^}]*)\}', lab_text)
    if match == None:
        print()
        continue
    else:
        lab_line = eval(match.group(1))
        if isinstance(lab_line, str):
            lab_line = set([lab_line])
    
    tot_sample.extend(sample_line)
    cnt = 0
    # fix the bug the cuckoo does not show T1115 although log explicitly shows clipboard operation
    if 'T1115' in lab_line and 'T1115' not in sample_line:
        sample_line.add('T1115')
    #if 'T1045' not in lab_line and 'T1045' in sample_line:
    #    lab_line.add('T1045')

    for item in lab_line:
        if item in sample_line:
            cnt += 1
            tot_correct += 1

    print('sample_line: ' + str(sample_line))
    print('lab_line: ' + str(lab_line))
    
    tot_cnt += len(lab_line)
    print(cnt / len(lab_line))

print(tot_correct / tot_cnt)

print(tot_sample)

# 统计每个元素出现的频率
element_count = Counter(tot_sample)

# 计算总元素数
total_elements = len(tot_sample)

# 计算每个元素的频率
element_freq = {element: count / total_elements for element, count in element_count.items()}

element_freq = dict(sorted(element_freq.items(), key=lambda x: x[1], reverse=True))


# 将占比小于2%的元素归入others
others_freq = 0
for element in list(element_freq.keys()):
    if element_freq[element] < 0.03:
        others_freq += element_freq[element]
        del element_freq[element]

element_freq['others'] = others_freq

# 绘制饼图
plt.figure(figsize=(8, 8))
plt.pie(element_freq.values(), labels=element_freq.keys(), autopct='%1.1f%%', pctdistance=0.85)

# 添加图例
# plt.legend(element_freq.keys(), loc="upper left")

plt.show()
